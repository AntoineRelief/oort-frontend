default:
  image: node:latest

  # Validate that the repository contains a package.json and extract a few values from it.
  before_script:
    - |
      if [[ ! -f package.json ]]; then
        echo "No package.json found! A package.json file is required to publish a package to GitLab's NPM registry."
        echo 'For more information, see https://docs.gitlab.com/ee/user/packages/npm_registry/#creating-a-project'
        exit 1
      fi
    - NPM_PACKAGE_NAME=$(node -p "require('./projects/who-ems/package.json').name")
    - NPM_PACKAGE_VERSION=$(node -p "require('./projects/who-ems/package.json').version")

stages:
  # - build
  - deploy

# validate_package_scope:
#   stage: build
#   script:
#     - |
#       if [[ ! $NPM_PACKAGE_NAME =~ ^@$CI_PROJECT_ROOT_NAMESPACE/ ]]; then
#         echo "Invalid package scope! Packages must be scoped in the root namespace of the project, e.g. \"@${CI_PROJECT_ROOT_NAMESPACE}/${CI_PROJECT_NAME}\""
#         echo 'For more information, see https://docs.gitlab.com/ee/user/packages/npm_registry/#package-naming-convention'
#         exit 1
#       fi

# create_npmrc:
#   stage: build
#   script:
#     - |
#       echo '${CI_JOB_TOKEN}'
#       if [[ ! -f .npmrc ]]; then
#         echo 'No .npmrc found! Creating one now. Please review the following link for more information: https://docs.gitlab.com/ee/user/packages/npm_registry/index.html#authenticating-with-a-ci-job-token'

#         {
#           echo '@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_SERVER_PROTOCOL}://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/'
#           echo '//gitlab.com/api/v4/packages/npm/:_authToken=${CI_JOB_TOKEN}'
#           echo '//gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}'
#         } >> .npmrc

#       fi
#   artifacts:
#     paths:
#       - .npmrc

# publish_package:
#   stage: deploy
#   script:
#     - |
#       {
#         npm publish ./projects/who-ems &&
#         echo "Successfully published version ${NPM_PACKAGE_VERSION} of ${NPM_PACKAGE_NAME} to GitLab's NPM registry: ${CI_PROJECT_URL}/-/packages"
#       } || {
#         echo "No new version of ${NPM_PACKAGE_NAME} published. This is most likely because version ${NPM_PACKAGE_VERSION} already exists in GitLab's NPM registry."; exit 1
#       }

deploy_back_office:
  stage: deploy
  before_script:
    - apt-get update -qq
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts  
    - npm i
  script:
    - npm run build -- --prod
    - ./CI/deploy-back-office.sh
  # only:
  #   - dev